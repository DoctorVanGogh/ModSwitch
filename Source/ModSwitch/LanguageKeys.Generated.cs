// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.     
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System.CodeDom.Compiler;
using System.Diagnostics.CodeAnalysis;

namespace DoctorVanGogh.ModSwitch {
    [GeneratedCode("DefGenerator.tt","0.2")]
    [SuppressMessage("ReSharper", "InconsistentNaming")]
    [SuppressMessage("ReSharper", "UnusedMember.Global")]
	public static partial class LanguageKeys {
		public static class @keyed {
			/// <summary>
			/// Gets the translation key for '<em>ModSwitch</em>'
			/// </summary>
			public const string @ModSwitch = "ModSwitch";
			/// <summary>
			/// Gets the translation key for '<em>Save current mod set</em>'
			/// </summary>
			public const string @ModSwitch_Tip_Create = "ModSwitch.Tip.Create";
			/// <summary>
			/// Gets the translation key for '<em>Delete</em>'
			/// </summary>
			public const string @ModSwitch_Tip_Delete = "ModSwitch.Tip.Delete";
			/// <summary>
			/// Gets the translation key for '<em>Rename</em>'
			/// </summary>
			public const string @ModSwitch_Tip_Rename = "ModSwitch.Tip.Rename";
			/// <summary>
			/// Gets the translation key for '<em>Export</em>'
			/// </summary>
			public const string @ModSwitch_Tip_Export = "ModSwitch.Tip.Export";
			/// <summary>
			/// Gets the translation key for '<em>Settings</em>'
			/// </summary>
			public const string @ModSwitch_Tip_Settings = "ModSwitch.Tip.Settings";
			/// <summary>
			/// Gets the translation key for '<em>Undo</em>'
			/// </summary>
			public const string @ModSwitch_Tip_Undo = "ModSwitch.Tip.Undo";
			/// <summary>
			/// Gets the translation key for '<em>Apply mod set</em>'
			/// </summary>
			public const string @ModSwitch_Tip_Apply = "ModSwitch.Tip.Apply";
			/// <summary>
			/// Gets the translation key for '<em>Create new</em>'
			/// </summary>
			public const string @ModSwitch_CreateNew = "ModSwitch.CreateNew";
			/// <summary>
			/// Gets the translation key for '<em>Overwrite existing...</em>'
			/// </summary>
			public const string @ModSwitch_OverwritExisting = "ModSwitch.OverwritExisting";
			/// <summary>
			/// Gets the translation key for '<em>Really overwrite {0}?<br /><br />&lt;i&gt;(You can suppress this dialog by holding SHIFT when you choose this option.)&lt;/i&gt;</em>'
			/// </summary>
			public const string @ModSwitch_OverwritExisting_Confirm = "ModSwitch.OverwritExisting.Confirm";
			/// <summary>
			/// Gets the translation key for '<em>Set Steam origin...</em>'
			/// </summary>
			public const string @ModSwitch_SetOrigin = "ModSwitch.SetOrigin";
			/// <summary>
			/// Gets the translation key for '<em>Manually set the steam original of {0} to {1}?<br />	<br />&lt;b&gt;WARNING:&lt;/b&gt; Setting a steam original source to incorrect values will lead to unexpected behavior should you ever sync the local copy to an updated steam version.</em>'
			/// </summary>
			public const string @ModSwitch_SetOrigin_Confirm = "ModSwitch.SetOrigin.Confirm";
			/// <summary>
			/// Gets the translation key for '<em>Import</em>'
			/// </summary>
			public const string @ModSwitch_Import = "ModSwitch.Import";
			/// <summary>
			/// Gets the translation key for '<em>Savegame</em>'
			/// </summary>
			public const string @ModSwitch_Import_Savegame = "ModSwitch.Import.Savegame";
			/// <summary>
			/// Gets the translation key for '<em>From File</em>'
			/// </summary>
			public const string @ModSwitch_Import_FromFile = "ModSwitch.Import.FromFile";
			/// <summary>
			/// Gets the translation key for '<em>{0} items</em>'
			/// </summary>
			public const string @ModSwitch_ModSet_Mods = "ModSwitch.ModSet.Mods";
			/// <summary>
			/// Gets the translation key for '<em>Really delete {0}?</em>'
			/// </summary>
			public const string @ModSwitch_ModSet_ConfirmDelete = "ModSwitch.ModSet.ConfirmDelete";
			/// <summary>
			/// Gets the translation key for '<em>Confirmation needed</em>'
			/// </summary>
			public const string @ModSwitch_Confirmation_Title = "ModSwitch.Confirmation.Title";
			/// <summary>
			/// Gets the translation key for '<em>Missing mods</em>'
			/// </summary>
			public const string @ModSwitch_MissingMods_Title = "ModSwitch.MissingMods.Title";
			/// <summary>
			/// Gets the translation key for '<em>Some mods from {0} are not currently installed:</em>'
			/// </summary>
			public const string @ModSwitch_MissingMods = "ModSwitch.MissingMods";
			/// <summary>
			/// Gets the translation key for '<em>Ignore</em>'
			/// </summary>
			public const string @ModSwitch_MissingMods_Choice_Ignore = "ModSwitch.MissingMods.Choice.Ignore";
			/// <summary>
			/// Gets the translation key for '<em>Ignore the missing mods.</em>'
			/// </summary>
			public const string @ModSwitch_MissingMods_Choice_Ignore_Tip = "ModSwitch.MissingMods.Choice.Ignore.Tip";
			/// <summary>
			/// Gets the translation key for '<em>Cancel &amp; Open workshop</em>'
			/// </summary>
			public const string @ModSwitch_MissingMods_Choice_Workshop = "ModSwitch.MissingMods.Choice.Workshop";
			/// <summary>
			/// Gets the translation key for '<em>Dont apply the Mod Set. Instead try retrieving applicable mods from the Steam Workshop. Keep in mind those mods might no longer be available.</em>'
			/// </summary>
			public const string @ModSwitch_MissingMods_Choice_Workshop_Tip = "ModSwitch.MissingMods.Choice.Workshop.Tip";
			/// <summary>
			/// Gets the translation key for '<em>Remove from Set</em>'
			/// </summary>
			public const string @ModSwitch_MissingMods_Choice_Remove = "ModSwitch.MissingMods.Choice.Remove";
			/// <summary>
			/// Gets the translation key for '<em>Remove the missing mods from the stored Mod Set.</em>'
			/// </summary>
			public const string @ModSwitch_MissingMods_Choice_Remove_Tip = "ModSwitch.MissingMods.Choice.Remove.Tip";
			/// <summary>
			/// Gets the translation key for '<em>New mod set</em>'
			/// </summary>
			public const string @ModSwitch_Create_DefaultName = "ModSwitch.Create.DefaultName";
			/// <summary>
			/// Gets the translation key for '<em>Do you want to append the imported sets or replace all existing sets?</em>'
			/// </summary>
			public const string @ModSwitch_Import_Text = "ModSwitch.Import.Text";
			/// <summary>
			/// Gets the translation key for '<em>Replace</em>'
			/// </summary>
			public const string @ModSwitch_Import_Choice_Replace = "ModSwitch.Import.Choice.Replace";
			/// <summary>
			/// Gets the translation key for '<em>Append</em>'
			/// </summary>
			public const string @ModSwitch_Import_Choice_Append = "ModSwitch.Import.Choice.Append";
			/// <summary>
			/// Gets the translation key for '<em>Color...</em>'
			/// </summary>
			public const string @ModSwitch_Color = "ModSwitch.Color";
			/// <summary>
			/// Gets the translation key for '<em>white</em>'
			/// </summary>
			public const string @ModSwitch_Color_white = "ModSwitch.Color.white";
			/// <summary>
			/// Gets the translation key for '<em>black</em>'
			/// </summary>
			public const string @ModSwitch_Color_black = "ModSwitch.Color.black";
			/// <summary>
			/// Gets the translation key for '<em>gray</em>'
			/// </summary>
			public const string @ModSwitch_Color_gray = "ModSwitch.Color.gray";
			/// <summary>
			/// Gets the translation key for '<em>red</em>'
			/// </summary>
			public const string @ModSwitch_Color_red = "ModSwitch.Color.red";
			/// <summary>
			/// Gets the translation key for '<em>green</em>'
			/// </summary>
			public const string @ModSwitch_Color_green = "ModSwitch.Color.green";
			/// <summary>
			/// Gets the translation key for '<em>blue</em>'
			/// </summary>
			public const string @ModSwitch_Color_blue = "ModSwitch.Color.blue";
			/// <summary>
			/// Gets the translation key for '<em>magenta</em>'
			/// </summary>
			public const string @ModSwitch_Color_magenta = "ModSwitch.Color.magenta";
			/// <summary>
			/// Gets the translation key for '<em>cyan</em>'
			/// </summary>
			public const string @ModSwitch_Color_cyan = "ModSwitch.Color.cyan";
			/// <summary>
			/// Gets the translation key for '<em>yellow</em>'
			/// </summary>
			public const string @ModSwitch_Color_yellow = "ModSwitch.Color.yellow";
			/// <summary>
			/// Gets the translation key for '<em>Create a local copy</em>'
			/// </summary>
			public const string @ModSwitch_CopyLocal = "ModSwitch.CopyLocal";
			/// <summary>
			/// Gets the translation key for '<em>Steam currently not running/available</em>'
			/// </summary>
			public const string @ModSwitch_Error_SteamNotRunning = "ModSwitch.Error.SteamNotRunning";
			/// <summary>
			/// Gets the translation key for '<em>There are already stored settings for the mod under the new name {0}. You can confirm overwriting the existing settings or skip copying settings.</em>'
			/// </summary>
			public const string @ModSwitch_ExistingSettings = "ModSwitch.ExistingSettings";
			/// <summary>
			/// Gets the translation key for '<em>Overwrite</em>'
			/// </summary>
			public const string @ModSwitch_ExistingSettings_Choice_Overwrite = "ModSwitch.ExistingSettings.Choice.Overwrite";
			/// <summary>
			/// Gets the translation key for '<em>Skip</em>'
			/// </summary>
			public const string @ModSwitch_ExistingSettings_Choice_Skip = "ModSwitch.ExistingSettings.Choice.Skip";
			/// <summary>
			/// Gets the translation key for '<em>Contains invalid characters</em>'
			/// </summary>
			public const string @ModSwitch_Error_InvalidChars = "ModSwitch.Error.InvalidChars";
			/// <summary>
			/// Gets the translation key for '<em>Target already exists</em>'
			/// </summary>
			public const string @ModSwitch_Error_TargetExists = "ModSwitch.Error.TargetExists";
			/// <summary>
			/// Gets the translation key for '<em>Target already exists: {0}</em>'
			/// </summary>
			public const string @ModSwitch_Error_TargetExists_Detailed = "ModSwitch.Error.TargetExists.Detailed";
			/// <summary>
			/// Gets the translation key for '<em>Not a valid mod path</em>'
			/// </summary>
			public const string @ModSwitch_Error_NotValid = "ModSwitch.Error.NotValid";
			/// <summary>
			/// Gets the translation key for '<em>Copied mod {0} to {1}.</em>'
			/// </summary>
			public const string @ModSwitch_CopyLocal_Result_Copy = "ModSwitch.CopyLocal.Result.Copy";
			/// <summary>
			/// Gets the translation key for '<em>Copied {0} settings file(s).</em>'
			/// </summary>
			public const string @ModSwitch_CopyLocal_Result_Settings = "ModSwitch.CopyLocal.Result.Settings";
			/// <summary>
			/// Gets the translation key for '<em>Skipped copying settings.</em>'
			/// </summary>
			public const string @ModSwitch_CopyLocal_Result_Skipped = "ModSwitch.CopyLocal.Result.Skipped";
			/// <summary>
			/// Gets the translation key for '<em>&lt;b&gt;Warning&lt;/b&gt;: Last upload time of the Steam original is unknown - sync support will be degraded.</em>'
			/// </summary>
			public const string @ModSwitch_CopyLocal_Result_TimestampUnknown = "ModSwitch.CopyLocal.Result.TimestampUnknown";
			/// <summary>
			/// Gets the translation key for '<em>Move to...</em>'
			/// </summary>
			public const string @ModSwitch_MoveTo = "ModSwitch.MoveTo";
			/// <summary>
			/// Gets the translation key for '<em>Top</em>'
			/// </summary>
			public const string @ModSwitch_MoveTo_Top = "ModSwitch.MoveTo.Top";
			/// <summary>
			/// Gets the translation key for '<em>Bottom</em>'
			/// </summary>
			public const string @ModSwitch_MoveTo_Bottom = "ModSwitch.MoveTo.Bottom";
			/// <summary>
			/// Gets the translation key for '<em>Open folder</em>'
			/// </summary>
			public const string @ModSwitch_OpenFolder = "ModSwitch.OpenFolder";
			/// <summary>
			/// Gets the translation key for '<em>Sync with Steam original</em>'
			/// </summary>
			public const string @ModSwitch_Sync = "ModSwitch.Sync";
			/// <summary>
			/// Gets the translation key for '<em>identical</em>'
			/// </summary>
			public const string @ModSwitch_Sync_Identical = "ModSwitch.Sync.Identical";
			/// <summary>
			/// Gets the translation key for '<em>The mod {0} will be updated to the current Steam version.<br /><br />  {1} - Steam upload date at (last) local copy<br />  {2} - Steam upload date currently on Steam<br /><br />Do you want to keep your existing settings from the local copy or replace them with the version of Steam?</em>'
			/// </summary>
			public const string @ModSwitch_Sync_Message = "ModSwitch.Sync.Message";
			/// <summary>
			/// Gets the translation key for '<em>Unknown</em>'
			/// </summary>
			public const string @ModSwitch_Sync_UnknownTimestamp = "ModSwitch.Sync.UnknownTimestamp";
			/// <summary>
			/// Gets the translation key for '<em>Keep existing</em>'
			/// </summary>
			public const string @ModSwitch_Sync_Choice_KeepSettings = "ModSwitch.Sync.Choice.KeepSettings";
			/// <summary>
			/// Gets the translation key for '<em>Replace with Steam</em>'
			/// </summary>
			public const string @ModSwitch_Sync_Choice_CopySteam = "ModSwitch.Sync.Choice.CopySteam";
			/// <summary>
			/// Gets the translation key for '<em>Search...</em>'
			/// </summary>
			public const string @ModSwitch_Search_Watermark = "ModSwitch.Search.Watermark";
			/// <summary>
			/// Gets the translation key for '<em>Local Steam copy</em>'
			/// </summary>
			public const string @ModSwitch_Source_SteamCopy = "ModSwitch.Source.SteamCopy";
			/// <summary>
			/// Gets the translation key for '<em>Restart</em>'
			/// </summary>
			public const string @ModSwitch_RestartRequired_Restart = "ModSwitch.RestartRequired.Restart";
			/// <summary>
			/// Gets the translation key for '<em>Later</em>'
			/// </summary>
			public const string @ModSwitch_RestartRequired_Defer = "ModSwitch.RestartRequired.Defer";
			/// <summary>
			/// Gets the translation key for '<em>Active</em>'
			/// </summary>
			public const string @ModSwitch_TreeView_Active = "ModSwitch.TreeView.Active";
			/// <summary>
			/// Gets the translation key for '<em>Error</em>'
			/// </summary>
			public const string @ModSwitch_Dialog_Error = "ModSwitch.Dialog.Error";
		}
	}
}
